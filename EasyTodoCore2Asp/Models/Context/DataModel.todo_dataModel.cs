//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2017/09/10 13:07:52
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System.Reflection;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using EasyTodoCore2Asp;

namespace CoreContext
{

    public partial class todo_dataModel : DbContext
    {

        public todo_dataModel() :
            base()
        {
            OnCreated();
        }

        public todo_dataModel(DbContextOptions<todo_dataModel> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UsePostgreSql(@"User Id=ruser;Password=raikou;Host=192.168.24.77;Database=todo_data;Persist Security Info=True;Initial Schema=ruser");
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<TodoDetailData> TodoDetailDatas
        {
            get;
            set;
        }

        public virtual DbSet<TodoDetailDataTmp> TodoDetailDataTmps
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.TodoDetailDataMapping(modelBuilder);
            this.CustomizeTodoDetailDataMapping(modelBuilder);

            this.TodoDetailDataTmpMapping(modelBuilder);
            this.CustomizeTodoDetailDataTmpMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }
    
        #region TodoDetailData Mapping

        private void TodoDetailDataMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TodoDetailData>().ToTable(@"todo_detail_data", @"ruser");
            modelBuilder.Entity<TodoDetailData>().Property<int>(x => x.UserId).HasColumnName(@"user_id").HasColumnType(@"int4").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().Property<int>(x => x.DataId).HasColumnName(@"data_id").HasColumnType(@"int4").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().Property<string>(x => x.Title).HasColumnName(@"title").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<TodoDetailData>().Property<string>(x => x.Detail).HasColumnName(@"detail").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<TodoDetailData>().Property<System.Nullable<System.DateTime>>(x => x.StartDate).HasColumnName(@"start_date").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().Property<System.Nullable<System.DateTime>>(x => x.EndDate).HasColumnName(@"end_date").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().Property<System.Nullable<int>>(x => x.State).HasColumnName(@"state").HasColumnType(@"int4").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().Property<System.Nullable<int>>(x => x.ColorId).HasColumnName(@"color_id").HasColumnType(@"int4").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailData>().HasKey(@"UserId", @"DataId");
        }
	
        partial void CustomizeTodoDetailDataMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region TodoDetailDataTmp Mapping

        private void TodoDetailDataTmpMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TodoDetailDataTmp>().ToTable(@"todo_detail_data_tmp", @"ruser");
            modelBuilder.Entity<TodoDetailDataTmp>().Property<int>(x => x.Id).HasColumnName(@"id").HasColumnType(@"int4").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<int>(x => x.UserId).HasColumnName(@"user_id").HasColumnType(@"int4").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<int>(x => x.DataId).HasColumnName(@"data_id").HasColumnType(@"int4").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<string>(x => x.Title).HasColumnName(@"title").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<TodoDetailDataTmp>().Property<string>(x => x.Detail).HasColumnName(@"detail").HasColumnType(@"varchar").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<TodoDetailDataTmp>().Property<System.Nullable<System.DateTime>>(x => x.StartDate).HasColumnName(@"start_date").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<System.Nullable<System.DateTime>>(x => x.EndDate).HasColumnName(@"end_date").HasColumnType(@"date").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<System.Nullable<int>>(x => x.State).HasColumnName(@"state").HasColumnType(@"int4").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().Property<System.Nullable<int>>(x => x.ColorId).HasColumnName(@"color_id").HasColumnType(@"int4").ValueGeneratedNever();
            modelBuilder.Entity<TodoDetailDataTmp>().HasKey(@"Id");
            modelBuilder.Entity<TodoDetailDataTmp>().HasIndex(@"UserId", @"DataId").IsUnique(true).HasName(@"KEY1");
        }
	
        partial void CustomizeTodoDetailDataTmpMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
